<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Repres.Server</name>
    </assembly>
    <members>
        <member name="T:Repres.Server.Controllers.BaseApiController`1">
            <summary>
            Abstract BaseApi Controller Class
            </summary>
        </member>
        <member name="M:Repres.Server.Controllers.Communication.ChatsController.GetChatHistoryAsync(System.String)">
            <summary>
            Get user wise chat history
            </summary>
            <param name="contactId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Communication.ChatsController.GetChatUsersAsync">
            <summary>
            get available users
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Communication.ChatsController.SaveMessageAsync(Repres.Application.Models.Chat.ChatHistory{Repres.Application.Interfaces.Chat.IChatUser})">
            <summary>
            Save Chat Message
            </summary>
            <param name="message"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.AccountController.UpdateProfile(Repres.Application.Requests.Identity.UpdateProfileRequest)">
            <summary>
            Update Profile
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.AccountController.ChangePassword(Repres.Application.Requests.Identity.ChangePasswordRequest)">
            <summary>
            Change Password
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.AccountController.GetProfilePictureAsync(System.String)">
            <summary>
            Get Profile picture by Id
            </summary>
            <param name="userId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.AccountController.GetProfileTimeZoneAsync(System.String)">
            <summary>
            Get Profile time zone by Id
            </summary>
            <param name="userId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.AccountController.GetProfileLanguageAsync(System.String)">
            <summary>
            Get Profile language by Id
            </summary>
            <param name="userId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.AccountController.UpdateProfilePictureAsync(Repres.Application.Requests.Identity.UpdateProfilePictureRequest)">
            <summary>
            Update Profile Picture
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.AccountController.GetProfileHasSheetAsync(System.String)">
            <summary>
            Profile has Sheet
            </summary>
            <param name="userId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.TokenController.Get(Repres.Application.Requests.Identity.TokenRequest)">
            <summary>
            Get Token (Email, Password)
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.TokenController.Refresh(Repres.Application.Requests.Identity.RefreshTokenRequest)">
            <summary>
            Refresh Token
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.GetAll">
            <summary>
            Get User Details
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.GetById(System.String)">
            <summary>
            Get User By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.GetRolesAsync(System.String)">
            <summary>
            Get User Roles By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.UpdateRolesAsync(Repres.Application.Requests.Identity.UpdateUserRolesRequest)">
            <summary>
            Update Roles for User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.RegisterAsync(Repres.Application.Requests.Identity.RegisterRequest)">
            <summary>
            Register a User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.ConfirmEmailAsync(System.String,System.String)">
            <summary>
            Confirm Email
            </summary>
            <param name="userId"></param>
            <param name="code"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.ToggleUserStatusAsync(Repres.Application.Requests.Identity.ToggleUserStatusRequest)">
            <summary>
            Toggle User Status (Activate and Deactivate)
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.ForgotPasswordAsync(Repres.Application.Requests.Identity.ForgotPasswordRequest)">
            <summary>
            Forgot Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.ResetPasswordAsync(Repres.Application.Requests.Identity.ResetPasswordRequest)">
            <summary>
            Reset Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Identity.UserController.Export(System.String)">
            <summary>
            Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.RoleClaimController.GetAll">
            <summary>
            Get All Role Claims(e.g. Product Create Permission)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.RoleClaimController.GetAllByRoleId(System.String)">
            <summary>
            Get All Role Claims By Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.RoleClaimController.Post(Repres.Application.Requests.Identity.RoleClaimRequest)">
            <summary>
            Add a Role Claim
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:Repres.Server.Controllers.RoleClaimController.Delete(System.Int32)">
            <summary>
            Delete a Role Claim
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.RoleController.GetAll">
            <summary>
            Get All Roles (basic, admin etc.)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.RoleController.Post(Repres.Application.Requests.Identity.RoleRequest)">
            <summary>
            Add a Role
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.RoleController.Delete(System.String)">
            <summary>
            Delete a Role
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.RoleController.GetPermissionsByRoleId(System.String)">
            <summary>
            Get Permissions By Role Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:Repres.Server.Controllers.RoleController.Update(Repres.Application.Requests.Identity.PermissionRequest)">
            <summary>
            Edit a Role Claim
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Repres.Server.Controllers.PingController">
            <summary>
            Abstract BaseApi Controller Class
            </summary>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.AuditsController.GetUserTrailsAsync">
            <summary>
            Get Current User Audit Trails
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.AuditsController.ExportExcel(System.String,System.Boolean,System.Boolean)">
            <summary>
            Search Audit Trails and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="searchInOldValues"></param>
            <param name="searchInNewValues"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="T:Repres.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4">
            <summary>
            Abstract Extended Attributes Controller Class
            </summary>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetAll">
            <summary>
            Get All Entity Extended Attributes
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetAllByEntityId(`1)">
            <summary>
            Get All Entity Extended Attributes by entity id
            </summary>
            <param name="entityId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetById(`0)">
            <summary>
            Get Entity Extended Attribute By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Post(Repres.Application.Features.ExtendedAttributes.Commands.AddEdit.AddEditExtendedAttributeCommand{`0,`1,`2,`3})">
            <summary>
            Create/Update a Entity Extended Attribute
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Delete(`0)">
            <summary>
            Delete a Entity Extended Attribute
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Export(System.String,`1,System.Boolean,System.Boolean,System.String)">
            <summary>
            Search Entity Extended Attribute and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="entityId"></param>
            <param name="includeEntity"></param>
            <param name="onlyCurrentGroup"></param>
            <param name="currentGroup"></param>
            <returns></returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.LanguageController.GetAll">
            <summary>
            Get All Time Zones
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.Misc.DocumentsController.GetAll(System.Int32,System.Int32,System.String)">
            <summary>
            Get All Documents
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.Misc.DocumentsController.GetById(System.Int32)">
            <summary>
            Get Document By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.Misc.DocumentsController.Post(Repres.Application.Features.Documents.Commands.AddEdit.AddEditDocumentCommand)">
            <summary>
            Add/Edit Document
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.Misc.DocumentsController.Delete(System.Int32)">
            <summary>
            Delete a Document
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.Misc.DocumentTypesController.GetAll">
            <summary>
            Get All Document Types
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.Misc.DocumentTypesController.GetById(System.Int32)">
            <summary>
            Get Document Type By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.Misc.DocumentTypesController.Post(Repres.Application.Features.DocumentTypes.Commands.AddEdit.AddEditDocumentTypeCommand)">
            <summary>
            Create/Update a Document Type
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.Misc.DocumentTypesController.Delete(System.Int32)">
            <summary>
            Delete a Document Type
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.Misc.DocumentTypesController.Export(System.String)">
            <summary>
            Search Document Types and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.PreferencesController.ChangeLanguageAsync(System.String)">
            <summary>
            Change Language Preference
            </summary>
            <param name="languageCode"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.Utilities.TimeZoneController.GetAll">
            <summary>
            Get All Time Zones
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.v1.DashboardController.GetDataAsync">
            <summary>
            Get Dashboard Data
            </summary>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:Repres.Server.Controllers.v1.ThirdParty.ApisController.GetAll">
            <summary>
            Get All Apis
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.v1.ThirdParty.ApisController.GetById(System.Int32)">
            <summary>
            Get a Api By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:Repres.Server.Controllers.v1.ThirdParty.ApisController.Post(Repres.Application.Features.Apis.Commands.Edit.EditApiCommand)">
            <summary>
            Create/Update a Brand
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.v1.ThirdParty.ApisController.GetApiAccess(System.String)">
            <summary>
            Get a Api Access for User
            </summary>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:Repres.Server.Controllers.v1.ThirdParty.ApisController.Post(Repres.Application.Features.Apis.Commands.TokenPersist.TokenPersistCommand)">
            <summary>
            Create/Update a Brand
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:Repres.Server.Controllers.v1.ThirdParty.ApisController.ProcessApiData(System.String,Repres.Application.Requests.ThirdParty.ProcessDateRange)">
            <summary>
            Execute APIs Processes by UserId
            </summary>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:Repres.Server.Controllers.v1.ThidParty.Oura.OuraController.Post(System.String)">
            <summary>
            Remove Oura user's data and google sheet
            </summary>
            <param name="userId"></param>
            <returns>Status 200 OK</returns>
        </member>
    </members>
</doc>
